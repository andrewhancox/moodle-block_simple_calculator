{"version":3,"sources":["../src/simple_calculator.js"],"names":["define","$","calculator","init","currentOperand","previousOperand","operation","calc","computation","prev","parseFloat","current","isNaN","document","on","number","text","includes","updateDisplay","toString","slice","getString","stringNumber","integerDigits","split","decimalDigits","integerDisplay","toLocaleString","maximumFractionDigits","value","previousValue"],"mappings":"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","sourcesContent":["\ndefine(['jquery'], function($) {\n    var calculator = {\n        init: function() {\n            var currentOperand = '';\n            var previousOperand = '';\n            var operation = null;\n            // CALCULATION\n            $.calc = function() {\n                let computation;\n                const prev = parseFloat(previousOperand);\n                const current = parseFloat(currentOperand);\n                if (isNaN(prev) || isNaN(current)) {\n                    return;\n                }\n                switch (operation) {\n                    case '+':\n                        computation = prev + current;\n                        break;\n                    case '-':\n                        computation = prev - current;\n                        break;\n                    case '*':\n                        computation = prev * current;\n                        break;\n                    case 'รท':\n                        computation = prev / current;\n                        break;\n                    default:\n                        return;\n                }\n                currentOperand = computation;\n                operation = null;\n                previousOperand = '';\n            };\n            // NUMBER CLICKS\n            $(document).on('click', '.data-calculator-number', function() {\n                var number = $(this).text();\n                if (number === '.' && currentOperand.includes('.')) {\n                    calculator.updateDisplay(currentOperand, operation, previousOperand);\n                } else {\n                    currentOperand = currentOperand.toString() + number.toString();\n                    calculator.updateDisplay(currentOperand, operation, previousOperand);\n                }\n            });\n            // CLEAR DISPLAY\n            $(document).on('click', '.data-calculator-all-clear', function() {\n                currentOperand = '';\n                previousOperand = '';\n                operation = null;\n                calculator.updateDisplay(currentOperand, operation, previousOperand);\n            });\n            // DELETE NUMBER\n            $(document).on('click', '.data-calculator-delete', function() {\n                currentOperand = currentOperand.toString().slice(0, -1);\n                calculator.updateDisplay(currentOperand, operation, previousOperand);\n            });\n            // CALCULATOR OPS BUTTON\n            $(document).on('click', '.data-calculator-operation', function() {\n                operation = $(this).text();\n                if (currentOperand !== '') {\n                    if (previousOperand !== '') {\n                        $.calc();\n                    }\n                    previousOperand = currentOperand;\n                    currentOperand = '';\n                    calculator.updateDisplay(previousOperand, operation, currentOperand);\n                }\n            });\n            // EQ BUTTON CLICK\n            $(document).on('click', '.data-calculator-equals', function() {\n                if (currentOperand !== '') {\n                    if (previousOperand !== '') {\n                        $.calc();\n                    }\n                    calculator.updateDisplay(currentOperand, operation, previousOperand);\n                }\n            });\n\n        },\n        updateDisplay: function(currentOperand, operation, previousOperand) {\n            $.getString = function(number) {\n                const stringNumber = number.toString();\n                const integerDigits = parseFloat(stringNumber.split('.')[0]);\n                const decimalDigits = stringNumber.split('.')[1];\n                let integerDisplay;\n                if (isNaN(integerDigits)) {\n                    integerDisplay = '';\n                } else {\n                    integerDisplay = integerDigits.toLocaleString('en', { maximumFractionDigits: 0 });\n                }\n                if (decimalDigits) {\n                    return `${integerDisplay}.${decimalDigits}`;\n                } else {\n                    return integerDisplay;\n                }\n            };\n            var value = $.getString(currentOperand);\n            var previousValue = $.getString(previousOperand) + operation;\n            $(\"#data-block-calculator-current-operand\").text(value);\n            if (operation) {\n                $(\"#data-block-calculator-previous-operand\").text(previousValue);\n            } else {\n                $(\"#data-block-calculator-previous-operand\").text('');\n            }\n        }\n    };\n    return calculator;\n});\n"],"file":"simple_calculator.min.js"}